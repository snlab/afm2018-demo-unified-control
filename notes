Prework:

1. git pull
cd /home/afm18/afm-demo/afm2018-demo-unified-control
git pull 

2. set up freeradius
cp -r /home/afm18/afm-demo/afm2018-demo-unified-control/nfs/radius/raddb /home/afm18/afm-demo/freeradius-server/raddb

3. fix kytos bug
cp /home/afm18/afm-demo/afm2018-demo-unified-control/kytos-fix/main.py /home/afm18/afm-demo/kytosvenv/var/lib/kytos/napps/kytos/topology/main.py

Workflow:

1. start kytos controller
cd /home/afm18/afm-demo/afm2018-demo-unified-control/test-scripts
./controller.sh

2. start mininet
cd /home/afm18/afm-demo/afm2018-demo-unified-control/mininet-scripts
sudo python ./topogen.py config/demo5.yaml --ddp

3. start freeradius server
cd /home/afm18/afm-demo/freeradius-server/raddb
sudo radiusd -X -d .

3x. start adhoc aaa server
/home/afm18/afm-demo/afm2018-demo-unified-control/mininet-scripts
./radius-server.sh

4. start bro server
cd /home/afm18/afm-demo/afm2018-demo-unified-control/nfs/bro
sudo /usr/local/bro/bin/bro -i vnf-eth1 http_url_mod.bro -C

5. h1 requests authentication from the freeradius server
// usename: steve, password: testing
mininet>h1 radtest -P udp steve testing 10.0.0.3:9000 0 testing123

5x. h1 ... from adhoc aaa server
mininet>h1 ./radius-client.sh user rightpassword

6. check responce
//Note: the path has been deleted since the pkt has gone to another branch.

7. start http server
mininet>ser python -m SimpleHTTPServer 80 &

7x. start demohttpserver
mininet>ser xterm &
cd /home/afm18/afm-demo/afm2018-demo-unified-control/nfs/demo-http
./demohttpserver.py 0.0.0.0

8. client sends http request
//Example
mininet>h1 curl http://10.0.0.1/xxx.data

8x. client send http request to demohttpserver
mininet>h1 xterm &
cd /home/afm18/afm-demo/afm2018-demo-unified-control/nfs/demo-http
h1 ./democlient.py http://10.0.0.1:6666/demo/500000000.mp4 1 >/dev/null

9. check path
//kytos wb ui:
http://<your-ubuntu-ip-address>:8181
//mininet:
mininet>sh ovs-ofctl n1 dump-flows

10. client sends different http request
//Example
mininet>h1 curl http://10.0.0.1/yyy.mp4

11. check path

12. link down
//Example
mininet>link n1 n3 down

13. check path


NOTE:
1. The trident program is at /home/afm18/afm-demo/afm2018-demo-unified-control/trident/napps/snlab/trident_server/trident/example.tr
2. The network is shown in /home/afm18/afm-demo/afm2018-demo-unified-control/mininet-scripts/topo5.png
3. For *.mp4 flow, it should go through n5 to get to ser (n1 - n3 - n5). Therefore, to demostrate the efficience of the system, you may try to make link n1 and n3 down.






