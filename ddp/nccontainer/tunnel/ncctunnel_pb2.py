# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ncctunnel.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()

DESCRIPTOR = _descriptor.FileDescriptor(
    name='ncctunnel.proto',
    package='tunnel',
    syntax='proto3',
    serialized_pb=_b(
        '\n\x0fncctunnel.proto\x12\x06tunnel\"r\n\x0bnccontainer\x12\x0e\n\x06switch\x18\x01 \x01(\t\x12\r\n\x05op_id\x18\x02 \x01(\t\x12\x13\n\x0binstruction\x18\x03 \x01(\t\x12\x10\n\x08\x61\x63k_from\x18\x04 \x01(\t\x12\x0e\n\x06\x61\x63k_to\x18\x05 \x01(\t\x12\r\n\x05\x65ntry\x18\x06 \x01(\x0c\"w\n\x10\x42\x61\x63kStreamTunnel\x12\x0e\n\x06switch\x18\x01 \x01(\t\x12\r\n\x05op_id\x18\x02 \x01(\t\x12\x13\n\x0binstruction\x18\x03 \x01(\t\x12\x10\n\x08\x61\x63k_from\x18\x04 \x01(\t\x12\x0e\n\x06\x61\x63k_to\x18\x05 \x01(\t\x12\r\n\x05\x65ntry\x18\x06 \x01(\x0c*\x1f\n\x04Type\x12\n\n\x06NO_MOD\x10\x00\x12\x0b\n\x07NC_CTRL\x10\x01\x62\x06proto3')
)

_TYPE = _descriptor.EnumDescriptor(
    name='Type',
    full_name='tunnel.Type',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='NO_MOD', index=0, number=0,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='NC_CTRL', index=1, number=1,
            options=None,
            type=None),
    ],
    containing_type=None,
    options=None,
    serialized_start=264,
    serialized_end=295,
)
_sym_db.RegisterEnumDescriptor(_TYPE)

Type = enum_type_wrapper.EnumTypeWrapper(_TYPE)
NO_MOD = 0
NC_CTRL = 1

_NCCONTAINER = _descriptor.Descriptor(
    name='nccontainer',
    full_name='tunnel.nccontainer',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='switch', full_name='tunnel.nccontainer.switch', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='op_id', full_name='tunnel.nccontainer.op_id', index=1,
            number=2, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='instruction', full_name='tunnel.nccontainer.instruction', index=2,
            number=3, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='ack_from', full_name='tunnel.nccontainer.ack_from', index=3,
            number=4, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='ack_to', full_name='tunnel.nccontainer.ack_to', index=4,
            number=5, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='entry', full_name='tunnel.nccontainer.entry', index=5,
            number=6, type=12, cpp_type=9, label=1,
            has_default_value=False, default_value=_b(""),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=27,
    serialized_end=141,
)

_BACKSTREAMTUNNEL = _descriptor.Descriptor(
    name='BackStreamTunnel',
    full_name='tunnel.BackStreamTunnel',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='switch', full_name='tunnel.BackStreamTunnel.switch', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='op_id', full_name='tunnel.BackStreamTunnel.op_id', index=1,
            number=2, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='instruction', full_name='tunnel.BackStreamTunnel.instruction', index=2,
            number=3, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='ack_from', full_name='tunnel.BackStreamTunnel.ack_from', index=3,
            number=4, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='ack_to', full_name='tunnel.BackStreamTunnel.ack_to', index=4,
            number=5, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='entry', full_name='tunnel.BackStreamTunnel.entry', index=5,
            number=6, type=12, cpp_type=9, label=1,
            has_default_value=False, default_value=_b(""),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=143,
    serialized_end=262,
)

DESCRIPTOR.message_types_by_name['nccontainer'] = _NCCONTAINER
DESCRIPTOR.message_types_by_name['BackStreamTunnel'] = _BACKSTREAMTUNNEL
DESCRIPTOR.enum_types_by_name['Type'] = _TYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

nccontainer = _reflection.GeneratedProtocolMessageType('nccontainer', (_message.Message,), dict(
    DESCRIPTOR=_NCCONTAINER,
    __module__='ncctunnel_pb2'
    # @@protoc_insertion_point(class_scope:tunnel.nccontainer)
))
_sym_db.RegisterMessage(nccontainer)

BackStreamTunnel = _reflection.GeneratedProtocolMessageType('BackStreamTunnel', (_message.Message,), dict(
    DESCRIPTOR=_BACKSTREAMTUNNEL,
    __module__='ncctunnel_pb2'
    # @@protoc_insertion_point(class_scope:tunnel.BackStreamTunnel)
))
_sym_db.RegisterMessage(BackStreamTunnel)


# @@protoc_insertion_point(module_scope)
