from napps.snlab.trident_server.trident.tridentlib import TridentServer
path = "napps/snlab/trident_server/trident/"

def test_lark(larkfile, progfile):
    trident = TridentServer()

    with open(progfile) as f:
        program = f.read()
        trident.set_ctx_controller("Fake")
        trident.submit(larkfile, program, debug=True)
        for t in trident.ctx.tables:
            print(t)

from napps.snlab.trident_server.trident.objects import Packet
def test_hard():
    trident = TridentServer()
    print(trident.set_topology({ "s1": {"role": "sw"}, "s2": {"role": "sw"}, "h1": {"role": "client"  }, "h2": { "role": "server"  }, "dpi1": { "role": "dpi"}, "dpi2": { "role": "dpi"  }}, 
            {'00:00:00:00:00:00:00:04:3+00:00:00:00:00:00:00:05:1': {'src': '00:00:00:00:00:00:00:04:3', 'dst': '00:00:00:00:00:00:00:05:1'}, '00:00:00:00:00:00:00:05:1+00:00:00:00:00:00:00:04:3': {'src': '00:00:00:00:00:00:00:05:1', 'dst': '00:00:00:00:00:00:00:04:3'}, '00:00:00:00:00:00:00:03:3+00:00:00:00:00:00:00:05:2': {'src': '00:00:00:00:00:00:00:03:3', 'dst': '00:00:00:00:00:00:00:05:2'}, '00:00:00:00:00:00:00:05:2+00:00:00:00:00:00:00:03:3': {'src': '00:00:00:00:00:00:00:05:2', 'dst': '00:00:00:00:00:00:00:03:3'}, '00:00:00:00:00:00:00:01:2+00:00:00:00:00:00:00:03:1': {'src': '00:00:00:00:00:00:00:01:2', 'dst': '00:00:00:00:00:00:00:03:1'}, '00:00:00:00:00:00:00:03:1+00:00:00:00:00:00:00:01:2': {'src': '00:00:00:00:00:00:00:03:1', 'dst': '00:00:00:00:00:00:00:01:2'}, '00:00:00:00:00:00:00:02:3+00:00:00:00:00:00:00:05:3': {'src': '00:00:00:00:00:00:00:02:3', 'dst': '00:00:00:00:00:00:00:05:3'}, '00:00:00:00:00:00:00:05:3+00:00:00:00:00:00:00:02:3': {'src': '00:00:00:00:00:00:00:05:3', 'dst': '00:00:00:00:00:00:00:02:3'}, '00:00:00:00:00:00:00:02:2+00:00:00:00:00:00:00:03:4': {'src': '00:00:00:00:00:00:00:02:2', 'dst': '00:00:00:00:00:00:00:03:4'}, '00:00:00:00:00:00:00:03:4+00:00:00:00:00:00:00:02:2': {'src': '00:00:00:00:00:00:00:03:4', 'dst': '00:00:00:00:00:00:00:02:2'}, '00:00:00:00:00:00:00:04:2+00:00:00:00:00:00:00:03:2': {'src': '00:00:00:00:00:00:00:04:2', 'dst': '00:00:00:00:00:00:00:03:2'}, '00:00:00:00:00:00:00:03:2+00:00:00:00:00:00:00:04:2': {'src': '00:00:00:00:00:00:00:03:2', 'dst': '00:00:00:00:00:00:00:04:2'}, '00:00:00:00:00:00:00:01:3+00:00:00:00:00:00:00:04:1': {'src': '00:00:00:00:00:00:00:01:3', 'dst': '00:00:00:00:00:00:00:04:1'}, '00:00:00:00:00:00:00:04:1+00:00:00:00:00:00:00:01:3': {'src': '00:00:00:00:00:00:00:04:1', 'dst': '00:00:00:00:00:00:00:01:3'}, '00:00:00:00:00:00:00:01:1+00:00:00:00:00:00:00:02:1': {'src': '00:00:00:00:00:00:00:01:1', 'dst': '00:00:00:00:00:00:00:02:1'}, '00:00:00:00:00:00:00:02:1+00:00:00:00:00:00:00:01:1': {'src': '00:00:00:00:00:00:00:02:1', 'dst': '00:00:00:00:00:00:00:01:1'}}))

if __name__ == '__main__':
    # test_lark(path + "example.lark", path + "example.tr")
    test_hard()
