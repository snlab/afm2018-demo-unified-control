#from napps.snlab.trident_server.trident.tridentlib import TridentServer
from napps.snlab.trident_server.trident.tridentlib_hard import TridentContext as TridentServer
path = "napps/snlab/trident_server/trident/"

def test_lark(larkfile, progfile):
    trident = TridentServer()

    with open(progfile) as f:
        program = f.read()
        trident.set_ctx_controller("Fake")
        trident.submit(larkfile, program, debug=True)
        for t in trident.ctx.tables:
            print(t)

from napps.snlab.trident_server.trident.objects import Packet
def test_hard():
    trident = TridentServer("")

    nodes = {'00:00:00:00:00:00:00:01': {'role': 'sw'}, '00:00:00:00:00:00:00:03': {'role': 'sw'}, '00:00:00:00:00:00:00:02': {'role': 'sw'}, '00:00:00:00:00:00:00:05': {'role': 'sw'}, '00:00:00:00:00:00:00:04': {'role': 'sw'}, '10.0.0.2': {'role': 'client'}, '10.0.0.1': {'role': 'server'}, '10.0.0.3': {'role': 'aaa'}, '10.0.0.4': {'role': 'dpi'}}
    edges = {'00:00:00:00:00:00:00:02:1+00:00:00:00:00:00:00:01:1': {'src': '00:00:00:00:00:00:00:02:1', 'dst': '00:00:00:00:00:00:00:01:1'}, '00:00:00:00:00:00:00:01:1+00:00:00:00:00:00:00:02:1': {'src': '00:00:00:00:00:00:00:01:1', 'dst': '00:00:00:00:00:00:00:02:1'}, '00:00:00:00:00:00:00:03:1+00:00:00:00:00:00:00:01:2': {'src': '00:00:00:00:00:00:00:03:1', 'dst': '00:00:00:00:00:00:00:01:2'}, '00:00:00:00:00:00:00:01:2+00:00:00:00:00:00:00:03:1': {'src': '00:00:00:00:00:00:00:01:2', 'dst': '00:00:00:00:00:00:00:03:1'}, '00:00:00:00:00:00:00:03:4+00:00:00:00:00:00:00:02:2': {'src': '00:00:00:00:00:00:00:03:4', 'dst': '00:00:00:00:00:00:00:02:2'}, '00:00:00:00:00:00:00:02:2+00:00:00:00:00:00:00:03:4': {'src': '00:00:00:00:00:00:00:02:2', 'dst': '00:00:00:00:00:00:00:03:4'}, '00:00:00:00:00:00:00:04:1+00:00:00:00:00:00:00:01:3': {'src': '00:00:00:00:00:00:00:04:1', 'dst': '00:00:00:00:00:00:00:01:3'}, '00:00:00:00:00:00:00:01:3+00:00:00:00:00:00:00:04:1': {'src': '00:00:00:00:00:00:00:01:3', 'dst': '00:00:00:00:00:00:00:04:1'}, '00:00:00:00:00:00:00:04:2+00:00:00:00:00:00:00:03:2': {'src': '00:00:00:00:00:00:00:04:2', 'dst': '00:00:00:00:00:00:00:03:2'}, '00:00:00:00:00:00:00:03:2+00:00:00:00:00:00:00:04:2': {'src': '00:00:00:00:00:00:00:03:2', 'dst': '00:00:00:00:00:00:00:04:2'}, '00:00:00:00:00:00:00:04:3+00:00:00:00:00:00:00:05:1': {'src': '00:00:00:00:00:00:00:04:3', 'dst': '00:00:00:00:00:00:00:05:1'}, '00:00:00:00:00:00:00:05:1+00:00:00:00:00:00:00:04:3': {'src': '00:00:00:00:00:00:00:05:1', 'dst': '00:00:00:00:00:00:00:04:3'}, '00:00:00:00:00:00:00:05:2+00:00:00:00:00:00:00:03:3': {'src': '00:00:00:00:00:00:00:05:2', 'dst': '00:00:00:00:00:00:00:03:3'}, '00:00:00:00:00:00:00:03:3+00:00:00:00:00:00:00:05:2': {'src': '00:00:00:00:00:00:00:03:3', 'dst': '00:00:00:00:00:00:00:05:2'}, '00:00:00:00:00:00:00:05:3+00:00:00:00:00:00:00:02:3': {'src': '00:00:00:00:00:00:00:05:3', 'dst': '00:00:00:00:00:00:00:02:3'}, '00:00:00:00:00:00:00:02:3+00:00:00:00:00:00:00:05:3': {'src': '00:00:00:00:00:00:00:02:3', 'dst': '00:00:00:00:00:00:00:05:3'}, '10.0.0.2+00:00:00:00:00:00:00:01:4': {'src': '10.0.0.2', 'dst': '00:00:00:00:00:00:00:01:4'}, '00:00:00:00:00:00:00:01:4+10.0.0.2': {'src': '00:00:00:00:00:00:00:01:4', 'dst': '10.0.0.2'}, '10.0.0.1+00:00:00:00:00:00:00:02:4': {'src': '10.0.0.1', 'dst': '00:00:00:00:00:00:00:02:4'}, '00:00:00:00:00:00:00:02:4+10.0.0.1': {'src': '00:00:00:00:00:00:00:02:4', 'dst': '10.0.0.1'}, '10.0.0.3+00:00:00:00:00:00:00:04:4': {'src': '10.0.0.3', 'dst': '00:00:00:00:00:00:00:04:4'}, '00:00:00:00:00:00:00:04:4+10.0.0.3': {'src': '00:00:00:00:00:00:00:04:4', 'dst': '10.0.0.3'}, '10.0.0.4+00:00:00:00:00:00:00:05:4': {'src': '10.0.0.4', 'dst': '00:00:00:00:00:00:00:05:4'}, '00:00:00:00:00:00:00:05:4+10.0.0.4': {'src': '00:00:00:00:00:00:00:05:4', 'dst': '10.0.0.4'}}
    trident.set_topology(nodes, edges)
    print(trident.generate_table())

    pkt = Packet('10.0.0.2', '10.0.0.1', 4, 80, 22)
    trident.set_pkt(pkt)
    print(trident.generate_table())

    trident.set_sa('authenticated', pkt, 'true')
    print(trident.generate_table())

    trident.set_sa('http_uri', pkt, 'www.xyz.com')
    print(trident.generate_table())

if __name__ == '__main__':
    # test_lark(path + "example.lark", path + "example.tr")
    test_hard()
